###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.5-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install mysql dependencies
RUN apk update \
    && apk add python3-dev musl-dev mariadb-dev gcc mariadb-connector-c-dev


# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.5-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/prod_staticfiles
RUN mkdir -p $APP_HOME/parsing/dumps
RUN mkdir -p $APP_HOME/logs
WORKDIR $APP_HOME

# for interacting with mysql
RUN apk update \
    && apk add mariadb-dev

# install dependencies
RUN apk update && apk add libpq mysql-client
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# add custom parsing classes to the python search path 
ENV PYTHONPATH $APP_HOME/parsing

ENV JOURNALS_ROOT $APP_HOME/parsing/journals
ENV REPORTS_ROOT $APP_HOME/parsing/reports
ENV DUMPS_ROOT $APP_HOME/parsing/dumps

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]